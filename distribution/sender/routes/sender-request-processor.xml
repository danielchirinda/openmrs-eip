<routes xmlns="http://camel.apache.org/schema/spring">

    <route id="sender-request-processor" errorHandlerRef="shutdownErrorHandler">
        <!-- TODO Make the delay configurable -->
        <from uri="scheduler:retry?initialDelay=15000&amp;delay=1800000" />

        <log message="Fetching next 1000 sync requests" loggingLevel="DEBUG" />

        <toD uri="jpa:SenderSyncRequest?query=SELECT r FROM SenderSyncRequest r WHERE r.status = 'NEW' ORDER BY r.dateCreated ASC, r.id ASC&amp;maximumResults=1000" />

        <choice>
            <when>
                <simple>${body.size()} > 0</simple>
                <log message="Fetched ${body.size()} sync requests" />

                <split parallelProcessing="false">
                    <simple>${body}</simple>
                    <setProperty name="syncRequest">
                        <simple>${body}</simple>
                    </setProperty>

                    <log message="Processing sync request -> ${exchangeProperty.syncRequest}" />

                    <setProperty name="entityRepo">
                        <method beanType="org.openmrs.eip.component.SyncContext" method="getRepositoryBean(${exchangeProperty.syncRequest.tableName})" />
                    </setProperty>

                    <log loggingLevel="DEBUG" message="Found SyncEntityRepository for entity class mapped to table ${exchangeProperty.syncRequest.tableName} -> ${exchangeProperty.entityRepo}" />

                    <log message="Looking up primary key for the entity" />

                    <setProperty name="requestedEntity">
                        <spel>#{getProperty('entityRepo').findByUuid(getProperty('syncRequest').identifier)}</spel>
                    </setProperty>

                    <choice>
                        <when>
                            <simple>${exchangeProperty.requestedEntity} == null</simple>
                            <log message="No entity found with identifier: ${exchangeProperty.syncRequest.identifier}" />
                            <script>
                                <spel>
                                    #{getProperty('syncRequest').markAsProcessed(false)}
                                </spel>
                            </script>
                        </when>
                        <otherwise>
                            <log message="Found requested entity -> ${exchangeProperty.requestedEntity}" />

                            <setProperty name="debeziumEvent">
                                <spel>#{new org.openmrs.eip.app.management.entity.DebeziumEvent()}</spel>
                            </setProperty>
                            <script>
                                <spel>
                                    #{getProperty('debeziumEvent').setEvent(new org.openmrs.eip.component.entity.Event())}
                                    #{getProperty('debeziumEvent').event.setPrimaryKeyId(getProperty('requestedEntity').id)}
                                    #{getProperty('debeziumEvent').event.setTableName(getProperty('syncRequest').tableName)}
                                    #{getProperty('debeziumEvent').event.setIdentifier(getProperty('syncRequest').identifier)}
                                    #{getProperty('debeziumEvent').event.setOperation('r')}
                                    #{getProperty('debeziumEvent').event.setRequestUuid(getProperty('syncRequest').requestUuid)}
                                    #{getProperty('debeziumEvent').setDateCreated(new java.util.Date())}
                                </spel>
                            </script>
                            <setBody>
                                <simple>${exchangeProperty.debeziumEvent}</simple>
                            </setBody>

                            <log loggingLevel="DEBUG" message="Saving generated event to the event queue: ${exchangeProperty.debeziumEvent}" />

                            <to uri="jpa:DebeziumEvent" />

                            <log message="Successfully saved the generated event to the event queue" />

                            <script>
                                <spel>
                                    #{getProperty('syncRequest').markAsProcessed(true)}
                                </spel>
                            </script>
                        </otherwise>
                    </choice>
                    <setBody>
                        <simple>${exchangeProperty.syncRequest}</simple>
                    </setBody>

                    <log loggingLevel="DEBUG" message="Saving updates for the sync request" />

                    <to uri="jpa:SenderSyncRequest" />

                    <log message="Successfully processed and updated the sync request " />
                </split>
            </when>
            <otherwise>
                <log loggingLevel="DEBUG" message="No sync requests found" />
            </otherwise>
        </choice>
    </route>

</routes>
